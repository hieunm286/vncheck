version: "3.3"
networks:
  dev:
    name: dev
services:
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASS}
    networks:
      - dev
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASS}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
      DB_NAME: ${MONGODB_DATABASE}
      DB_USER: ${MONGODB_USER}
      DB_PASSWORD: ${MONGODB_PASS}
    volumes:
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    networks:
      - dev
    ports:
    - 27017:27017

  server:
#    extends:
#      file: docker-compose.yml
#      service: server
    image: vncheck/server:dev
    build:
      context: ../../
      dockerfile: Dockerfile
    command:
      - /bin/bash
      - -c
      - |
        ./wait-for-it.sh mongo:27017
        npm run start
    volumes:
      - ../..:/app
      - .env
      - /app/node_modules
    environment:
      - PROJECT_NAME
      - SERVER_SECRET
      - SERVER_PORT
      - MONGODB_URL
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - CURRENT_ENV
      - API_PREFIX
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - mongo
    networks:
      - dev
    restart: "no"

